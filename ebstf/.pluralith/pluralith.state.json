{
 "configuration": {
  "provider_config": {
   "aws": {
    "expressions": {
     "default_tags": [
      {
       "tags": {
        "constant_value": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      }
     ],
     "region": {
      "constant_value": "us-east-1"
     }
    },
    "name": "aws",
    "version_constraint": "4.8.0"
   }
  },
  "root_module": {
   "module_calls": {
    "EC2Ansible": {
     "expressions": {
      "ami_linux": {
       "references": [
        "var.ami-linux"
       ]
      },
      "disable_api_termination": {
       "constant_value": "true"
      },
      "iamrole": {
       "references": [
        "aws_iam_role.nfsinstanceprofile.id",
        "aws_iam_role.nfsinstanceprofile"
       ]
      },
      "instance_size": {
       "references": [
        "var.instance_size"
       ]
      },
      "keypair": {
       "constant_value": "keypair"
      },
      "mon_to_fri_only": {
       "constant_value": "false"
      },
      "nfs-instance-ip": {
       "references": [
        "module.EC2NFS.nfs-instance-ip",
        "module.EC2NFS"
       ]
      },
      "persistence": {
       "constant_value": "true"
      },
      "private_r53": {
       "references": [
        "module.VPC.private_r53",
        "module.VPC"
       ]
      },
      "root_volume_size": {
       "references": [
        "var.root_volume_size"
       ]
      },
      "securitygroupID": {
       "references": [
        "module.VPC.securitygroupID",
        "module.VPC"
       ]
      },
      "servername": {
       "constant_value": "ansible1"
      },
      "subnet-id": {
       "references": [
        "module.VPC.subnet-id",
        "module.VPC"
       ]
      }
     },
     "module": {
      "outputs": {
       "ansible-instance-id": {
        "expression": {
         "references": [
          "aws_instance.rhel_server.id",
          "aws_instance.rhel_server"
         ]
        }
       },
       "ansible-instance-ip": {
        "expression": {
         "references": [
          "aws_instance.rhel_server.private_ip",
          "aws_instance.rhel_server"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_ebs_volume.tools-ansible-volume",
        "expressions": {
         "availability_zone": {
          "constant_value": "us-east-1a"
         },
         "size": {
          "constant_value": 50
         }
        },
        "mode": "managed",
        "name": "tools-ansible-volume",
        "provider_config_key": "EC2Ansible:aws",
        "schema_version": 0,
        "type": "aws_ebs_volume"
       },
       {
        "address": "aws_instance.rhel_server",
        "expressions": {
         "ami": {
          "references": [
           "var.ami_linux"
          ]
         },
         "associate_public_ip_address": {
          "constant_value": true
         },
         "availability_zone": {
          "constant_value": "us-east-1a"
         },
         "instance_type": {
          "references": [
           "var.instance_size"
          ]
         },
         "key_name": {
          "references": [
           "var.keypair"
          ]
         },
         "root_block_device": [
          {
           "volume_size": {
            "references": [
             "var.root_volume_size"
            ]
           }
          }
         ],
         "subnet_id": {
          "references": [
           "var.subnet-id"
          ]
         },
         "tags": {
          "references": [
           "var.servername",
           "var.servername"
          ]
         },
         "user_data": {
          "references": [
           "data.template_file.linuxuserdata.rendered",
           "data.template_file.linuxuserdata"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "var.securitygroupID"
          ]
         }
        },
        "mode": "managed",
        "name": "rhel_server",
        "provider_config_key": "EC2Ansible:aws",
        "schema_version": 1,
        "type": "aws_instance"
       },
       {
        "address": "aws_route53_record.ansible_r53_record",
        "expressions": {
         "name": {
          "constant_value": "ansible-TEST"
         },
         "records": {
          "references": [
           "aws_instance.rhel_server.private_ip",
           "aws_instance.rhel_server"
          ]
         },
         "ttl": {
          "constant_value": "300"
         },
         "type": {
          "constant_value": "A"
         },
         "zone_id": {
          "references": [
           "var.private_r53"
          ]
         }
        },
        "mode": "managed",
        "name": "ansible_r53_record",
        "provider_config_key": "EC2Ansible:aws",
        "schema_version": 2,
        "type": "aws_route53_record"
       },
       {
        "address": "aws_volume_attachment.Ansible-Attach",
        "expressions": {
         "device_name": {
          "constant_value": "/dev/xvdb"
         },
         "force_detach": {
          "constant_value": true
         },
         "instance_id": {
          "references": [
           "aws_instance.rhel_server.id",
           "aws_instance.rhel_server"
          ]
         },
         "volume_id": {
          "references": [
           "aws_ebs_volume.tools-ansible-volume.id",
           "aws_ebs_volume.tools-ansible-volume"
          ]
         }
        },
        "mode": "managed",
        "name": "Ansible-Attach",
        "provider_config_key": "EC2Ansible:aws",
        "schema_version": 0,
        "type": "aws_volume_attachment"
       },
       {
        "address": "data.template_file.linuxuserdata",
        "expressions": {
         "template": {
          "references": [
           "path.module"
          ]
         },
         "vars": {
          "references": [
           "var.nfs-instance-ip"
          ]
         }
        },
        "mode": "data",
        "name": "linuxuserdata",
        "provider_config_key": "EC2Ansible:template",
        "schema_version": 0,
        "type": "template_file"
       }
      ],
      "variables": {
       "ami_linux": {},
       "disable_api_termination": {},
       "iamrole": {},
       "instance_size": {},
       "keypair": {},
       "mon_to_fri_only": {},
       "nfs-instance-ip": {},
       "persistence": {},
       "private_r53": {},
       "root_volume_size": {},
       "securitygroupID": {},
       "servername": {},
       "subnet-id": {}
      }
     },
     "source": "./modules/Ansible"
    },
    "EC2NFS": {
     "expressions": {
      "ami_linux": {
       "references": [
        "var.ami-linux"
       ]
      },
      "disable_api_termination": {
       "constant_value": "true"
      },
      "iamrole": {
       "references": [
        "aws_iam_role.nfsinstanceprofile.id",
        "aws_iam_role.nfsinstanceprofile"
       ]
      },
      "instance_size": {
       "references": [
        "var.instance_size"
       ]
      },
      "keypair": {
       "constant_value": "keypair"
      },
      "mon_to_fri_only": {
       "constant_value": "false"
      },
      "persistence": {
       "constant_value": "true"
      },
      "private_r53": {
       "references": [
        "module.VPC.private_r53",
        "module.VPC"
       ]
      },
      "root_volume_size": {
       "references": [
        "var.root_volume_size"
       ]
      },
      "securitygroupID": {
       "references": [
        "module.VPC.securitygroupID",
        "module.VPC"
       ]
      },
      "servername": {
       "constant_value": "nfs1"
      },
      "subnet-id": {
       "references": [
        "module.VPC.subnet-id",
        "module.VPC"
       ]
      }
     },
     "module": {
      "outputs": {
       "nfs-instance-id": {
        "expression": {
         "references": [
          "aws_instance.rhel_server.id",
          "aws_instance.rhel_server"
         ]
        }
       },
       "nfs-instance-ip": {
        "expression": {
         "references": [
          "aws_instance.rhel_server.private_ip",
          "aws_instance.rhel_server"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_ebs_volume.tools-nfs-volume",
        "expressions": {
         "availability_zone": {
          "constant_value": "us-east-1a"
         },
         "size": {
          "constant_value": 50
         }
        },
        "mode": "managed",
        "name": "tools-nfs-volume",
        "provider_config_key": "EC2NFS:aws",
        "schema_version": 0,
        "type": "aws_ebs_volume"
       },
       {
        "address": "aws_instance.rhel_server",
        "expressions": {
         "ami": {
          "references": [
           "var.ami_linux"
          ]
         },
         "associate_public_ip_address": {
          "constant_value": true
         },
         "availability_zone": {
          "constant_value": "us-east-1a"
         },
         "instance_type": {
          "references": [
           "var.instance_size"
          ]
         },
         "key_name": {
          "references": [
           "var.keypair"
          ]
         },
         "root_block_device": [
          {
           "volume_size": {
            "references": [
             "var.root_volume_size"
            ]
           }
          }
         ],
         "subnet_id": {
          "references": [
           "var.subnet-id"
          ]
         },
         "tags": {
          "references": [
           "var.servername",
           "var.servername"
          ]
         },
         "user_data": {
          "references": [
           "data.template_file.linuxuserdata.rendered",
           "data.template_file.linuxuserdata"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "var.securitygroupID"
          ]
         }
        },
        "mode": "managed",
        "name": "rhel_server",
        "provider_config_key": "EC2NFS:aws",
        "schema_version": 1,
        "type": "aws_instance"
       },
       {
        "address": "aws_route53_record.nfs_r53_record",
        "expressions": {
         "name": {
          "constant_value": "nfs-TEST"
         },
         "records": {
          "references": [
           "aws_instance.rhel_server.private_ip",
           "aws_instance.rhel_server"
          ]
         },
         "ttl": {
          "constant_value": "300"
         },
         "type": {
          "constant_value": "A"
         },
         "zone_id": {
          "references": [
           "var.private_r53"
          ]
         }
        },
        "mode": "managed",
        "name": "nfs_r53_record",
        "provider_config_key": "EC2NFS:aws",
        "schema_version": 2,
        "type": "aws_route53_record"
       },
       {
        "address": "aws_volume_attachment.NFS-Attach",
        "expressions": {
         "device_name": {
          "constant_value": "/dev/xvdc"
         },
         "force_detach": {
          "constant_value": true
         },
         "instance_id": {
          "references": [
           "aws_instance.rhel_server.id",
           "aws_instance.rhel_server"
          ]
         },
         "volume_id": {
          "references": [
           "aws_ebs_volume.tools-nfs-volume.id",
           "aws_ebs_volume.tools-nfs-volume"
          ]
         }
        },
        "mode": "managed",
        "name": "NFS-Attach",
        "provider_config_key": "EC2NFS:aws",
        "schema_version": 0,
        "type": "aws_volume_attachment"
       },
       {
        "address": "data.template_file.linuxuserdata",
        "expressions": {
         "template": {
          "references": [
           "path.module"
          ]
         }
        },
        "mode": "data",
        "name": "linuxuserdata",
        "provider_config_key": "EC2NFS:template",
        "schema_version": 0,
        "type": "template_file"
       }
      ],
      "variables": {
       "ami_linux": {},
       "disable_api_termination": {},
       "iamrole": {},
       "instance_size": {},
       "keypair": {},
       "mon_to_fri_only": {},
       "persistence": {},
       "private_r53": {},
       "root_volume_size": {},
       "securitygroupID": {},
       "servername": {},
       "subnet-id": {}
      }
     },
     "source": "./modules/EC2NFS"
    },
    "Secrets": {
     "module": {
      "outputs": {
       "ansible-usersecret": {
        "expression": {
         "references": [
          "data.aws_secretsmanager_secret.ansible-user-secret.arn",
          "data.aws_secretsmanager_secret.ansible-user-secret"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_secretsmanager_secret.ansible-user",
        "expressions": {
         "name": {
          "constant_value": "ansible-user"
         }
        },
        "mode": "managed",
        "name": "ansible-user",
        "provider_config_key": "Secrets:aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret"
       },
       {
        "address": "aws_secretsmanager_secret_version.ansible-userversion",
        "expressions": {
         "secret_id": {
          "references": [
           "aws_secretsmanager_secret.ansible-user.id",
           "aws_secretsmanager_secret.ansible-user"
          ]
         },
         "secret_string": {
          "references": [
           "random_password.ansible-user.result",
           "random_password.ansible-user"
          ]
         }
        },
        "mode": "managed",
        "name": "ansible-userversion",
        "provider_config_key": "Secrets:aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret_version"
       },
       {
        "address": "random_password.ansible-user",
        "expressions": {
         "length": {
          "constant_value": 16
         },
         "override_special": {
          "constant_value": "_%@"
         },
         "special": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "ansible-user",
        "provider_config_key": "Secrets:random",
        "schema_version": 2,
        "type": "random_password"
       },
       {
        "address": "data.aws_secretsmanager_secret.ansible-user-secret",
        "expressions": {
         "arn": {
          "references": [
           "aws_secretsmanager_secret.ansible-user.arn",
           "aws_secretsmanager_secret.ansible-user"
          ]
         }
        },
        "mode": "data",
        "name": "ansible-user-secret",
        "provider_config_key": "Secrets:aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret"
       },
       {
        "address": "data.aws_secretsmanager_secret_version.ansible-userversion",
        "expressions": {
         "secret_id": {
          "references": [
           "data.aws_secretsmanager_secret.ansible-user-secret.arn",
           "data.aws_secretsmanager_secret.ansible-user-secret"
          ]
         }
        },
        "mode": "data",
        "name": "ansible-userversion",
        "provider_config_key": "Secrets:aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret_version"
       }
      ]
     },
     "source": "./modules/Secrets"
    },
    "VPC": {
     "expressions": {
      "management_vpc_cidr": {
       "references": [
        "var.management_vpc_cidr"
       ]
      }
     },
     "module": {
      "outputs": {
       "private_r53": {
        "expression": {
         "references": [
          "aws_route53_zone.private_mgmt.zone_id",
          "aws_route53_zone.private_mgmt"
         ]
        }
       },
       "securitygroupID": {
        "expression": {
         "references": [
          "aws_security_group.nfs-sg.id",
          "aws_security_group.nfs-sg"
         ]
        }
       },
       "subnet-id": {
        "expression": {
         "references": [
          "aws_subnet.public_subnet.id",
          "aws_subnet.public_subnet"
         ]
        }
       },
       "subnet_cidr": {
        "expression": {
         "references": [
          "aws_subnet.public_subnet.cidr_block",
          "aws_subnet.public_subnet"
         ]
        }
       },
       "subnet_id": {
        "expression": {
         "references": [
          "aws_subnet.public_subnet.id",
          "aws_subnet.public_subnet"
         ]
        }
       },
       "vpc_cidr": {
        "expression": {
         "references": [
          "aws_vpc.main_vpc.cidr_block",
          "aws_vpc.main_vpc"
         ]
        }
       },
       "vpc_id": {
        "expression": {
         "references": [
          "aws_vpc.main_vpc.id",
          "aws_vpc.main_vpc"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_internet_gateway.pub-igw",
        "expressions": {
         "vpc_id": {
          "references": [
           "aws_vpc.main_vpc.id",
           "aws_vpc.main_vpc"
          ]
         }
        },
        "mode": "managed",
        "name": "pub-igw",
        "provider_config_key": "VPC:aws",
        "schema_version": 0,
        "type": "aws_internet_gateway"
       },
       {
        "address": "aws_route53_zone.private_mgmt",
        "expressions": {
         "comment": {
          "constant_value": "Private DNS Zone for testing"
         },
         "name": {
          "constant_value": "mgmt.test.com"
         },
         "vpc": [
          {
           "vpc_id": {
            "references": [
             "aws_vpc.main_vpc.id",
             "aws_vpc.main_vpc"
            ]
           }
          }
         ]
        },
        "mode": "managed",
        "name": "private_mgmt",
        "provider_config_key": "VPC:aws",
        "schema_version": 0,
        "type": "aws_route53_zone"
       },
       {
        "address": "aws_route_table.prod-public-crt",
        "expressions": {
         "route": {
          "references": [
           "aws_internet_gateway.pub-igw.id",
           "aws_internet_gateway.pub-igw"
          ]
         },
         "vpc_id": {
          "references": [
           "aws_vpc.main_vpc.id",
           "aws_vpc.main_vpc"
          ]
         }
        },
        "mode": "managed",
        "name": "prod-public-crt",
        "provider_config_key": "VPC:aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table_association.main-public-subnet-1",
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.prod-public-crt.id",
           "aws_route_table.prod-public-crt"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.public_subnet.id",
           "aws_subnet.public_subnet"
          ]
         }
        },
        "mode": "managed",
        "name": "main-public-subnet-1",
        "provider_config_key": "VPC:aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_security_group.nfs-sg",
        "expressions": {
         "description": {
          "constant_value": "Security Group for NFS"
         },
         "egress": {
          "constant_value": [
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "All egress",
            "from_port": 0,
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_groups": null,
            "self": null,
            "to_port": 0
           }
          ]
         },
         "ingress": {
          "references": [
           "var.management_vpc_cidr",
           "var.management_vpc_cidr"
          ]
         },
         "name": {
          "constant_value": "nfs-sg"
         },
         "vpc_id": {
          "references": [
           "aws_vpc.main_vpc.id",
           "aws_vpc.main_vpc"
          ]
         }
        },
        "mode": "managed",
        "name": "nfs-sg",
        "provider_config_key": "VPC:aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_subnet.public_subnet",
        "expressions": {
         "availability_zone": {
          "constant_value": "us-east-1a"
         },
         "cidr_block": {
          "constant_value": "10.0.1.0/24"
         },
         "map_public_ip_on_launch": {
          "constant_value": true
         },
         "vpc_id": {
          "references": [
           "aws_vpc.main_vpc.id",
           "aws_vpc.main_vpc"
          ]
         }
        },
        "mode": "managed",
        "name": "public_subnet",
        "provider_config_key": "VPC:aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_vpc.main_vpc",
        "expressions": {
         "cidr_block": {
          "constant_value": "10.0.0.0/16"
         }
        },
        "mode": "managed",
        "name": "main_vpc",
        "provider_config_key": "VPC:aws",
        "schema_version": 1,
        "type": "aws_vpc"
       }
      ],
      "variables": {
       "management_vpc_cidr": {}
      }
     },
     "source": "./modules/VPC"
    },
    "cloudwatch": {
     "module": {
      "resources": [
       {
        "address": "aws_cloudwatch_dashboard.EC2",
        "expressions": {
         "dashboard_body": {
          "constant_value": "{\r\n  \"widgets\": [\r\n    {\r\n      \"type\": \"metric\",\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 12,\r\n      \"height\": 6,\r\n      \"properties\": {\r\n        \"metrics\": [\r\n          [\r\n            \"AWS/EC2\",\r\n            \"CPUUtilization\",\r\n            \"InstanceId\",\r\n            \"i-012345\"\r\n          ]\r\n        ],\r\n        \"period\": 300,\r\n        \"stat\": \"Average\",\r\n        \"region\": \"us-east-1\",\r\n        \"title\": \"EC2 Instance CPU\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"text\",\r\n      \"x\": 0,\r\n      \"y\": 7,\r\n      \"width\": 3,\r\n      \"height\": 3,\r\n      \"properties\": {\r\n        \"markdown\": \"Hello world\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n"
         },
         "dashboard_name": {
          "constant_value": "Default-EC2"
         }
        },
        "mode": "managed",
        "name": "EC2",
        "provider_config_key": "cloudwatch:aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_dashboard"
       },
       {
        "address": "aws_cloudwatch_log_group.AllEC2",
        "expressions": {
         "name": {
          "constant_value": "allec2"
         }
        },
        "mode": "managed",
        "name": "AllEC2",
        "provider_config_key": "cloudwatch:aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_cloudwatch_metric_alarm.EC2_CPU_Usage_Alarm",
        "expressions": {
         "alarm_description": {
          "constant_value": "This metric monitors ec2 cpu utilization exceeding 70%"
         },
         "alarm_name": {
          "constant_value": "EC2_CPU_Usage_Alarm"
         },
         "comparison_operator": {
          "constant_value": "GreaterThanOrEqualToThreshold"
         },
         "evaluation_periods": {
          "constant_value": "2"
         },
         "metric_name": {
          "constant_value": "CPUUtilization"
         },
         "namespace": {
          "constant_value": "AWS/EC2"
         },
         "period": {
          "constant_value": "60"
         },
         "statistic": {
          "constant_value": "Average"
         },
         "threshold": {
          "constant_value": "70"
         }
        },
        "mode": "managed",
        "name": "EC2_CPU_Usage_Alarm",
        "provider_config_key": "cloudwatch:aws",
        "schema_version": 1,
        "type": "aws_cloudwatch_metric_alarm"
       }
      ]
     },
     "source": "./modules/Cloudwatch"
    }
   },
   "resources": [
    {
     "address": "aws_iam_instance_profile.nfsinstanceprofile-iamrole",
     "expressions": {
      "name": {
       "references": [
        "aws_iam_role.nfsinstanceprofile.name",
        "aws_iam_role.nfsinstanceprofile"
       ]
      },
      "role": {
       "references": [
        "aws_iam_role.nfsinstanceprofile.name",
        "aws_iam_role.nfsinstanceprofile"
       ]
      }
     },
     "mode": "managed",
     "name": "nfsinstanceprofile-iamrole",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_instance_profile"
    },
    {
     "address": "aws_iam_role.nfsinstanceprofile",
     "expressions": {
      "assume_role_policy": {},
      "name": {
       "constant_value": "nfsinstanceprofile"
      }
     },
     "mode": "managed",
     "name": "nfsinstanceprofile",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role"
    },
    {
     "address": "aws_iam_role_policy.nfs-iam-role-policy",
     "expressions": {
      "name": {
       "constant_value": "nfs-iam-role-policy"
      },
      "policy": {},
      "role": {
       "references": [
        "aws_iam_role.nfsinstanceprofile.id",
        "aws_iam_role.nfsinstanceprofile"
       ]
      }
     },
     "mode": "managed",
     "name": "nfs-iam-role-policy",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_iam_role_policy"
    },
    {
     "address": "aws_key_pair.keypair",
     "expressions": {
      "key_name": {
       "constant_value": "keypair"
      },
      "public_key": {
       "constant_value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDknvglyljz8axr9FqPytFZ8itvP4LDnNQVQd5A3jSy5CT4pQtOoJ/F9TxUrv/qLTYVm6Y5eI8SFKU9GPGXe/gEH48tbPnUMRWwArpLfzu6ji/xESOqtLxmPfD3gVznIvPOXlostU3d8jhr22Q0i2RPPtNU9NXA9fpiM3A0UWeiMkLXwrxRt0Mkxsg7wG2JJB/er/eEBUGx4nQ9gKp6J5nmbui03lzwxKcxUvjckeZR1k4xUIEKdW+T39J1JzxrH/k/tXe7d+tlASsQV5omSIR8PpVf2Yksbp174YizLA/d4iUgBOLvq+v4v1l3gnOaIxD9Bky7sDpAUc+V7NAKMb5lVpweR50RSbI5dUtBfOR8jRfLBGOIvzBlHcxW8nOpG+MTJPUyfr0C2LyfCO+vnAeRuswwX+IsGXHX57tBnl0Mq0QE6dtLwPpTGiZg3ViLXxB7rdC686NVLK+yDNvU2qk7Je+5zQeNRnYazmQgeubE31aC9sVNf7Ra7dTHF7G4A3M= svduser@DESKTOP-3PCHSKI"
      }
     },
     "mode": "managed",
     "name": "keypair",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_key_pair"
    }
   ],
   "variables": {
    "ami-linux": {
     "description": "AMI"
    },
    "aws_region": {
     "description": "AWS region to launch servers"
    },
    "instance_size": {
     "description": "instancesize"
    },
    "interface_name": {
     "description": "interfacetype"
    },
    "keypair": {
     "description": "Keypair"
    },
    "management_vpc_cidr": {
     "description": "CIDR block of the Management VPC for "
    },
    "root_volume_size": {
     "description": "rootvol"
    }
   }
  }
 },
 "format_version": "1.0",
 "planned_values": {
  "root_module": {
   "child_modules": [
    {
     "address": "module.EC2Ansible",
     "resources": [
      {
       "address": "module.EC2Ansible.aws_ebs_volume.tools-ansible-volume",
       "mode": "managed",
       "name": "tools-ansible-volume",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_ebs_volume",
       "values": {
        "availability_zone": "us-east-1a",
        "multi_attach_enabled": null,
        "outpost_arn": null,
        "size": 50,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      },
      {
       "address": "module.EC2Ansible.aws_instance.rhel_server",
       "mode": "managed",
       "name": "rhel_server",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "capacity_reservation_specification": [],
        "credit_specification": [],
        "ebs_block_device": [],
        "enclave_options": [],
        "ephemeral_block_device": [],
        "ipv6_addresses": [],
        "launch_template": [],
        "metadata_options": [],
        "network_interface": [],
        "root_block_device": [
         {}
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "tags": {},
        "tags_all": {},
        "vpc_security_group_ids": []
       },
       "type": "aws_instance",
       "values": {
        "ami": "ami-0f095f89ae15be883",
        "associate_public_ip_address": true,
        "availability_zone": "us-east-1a",
        "credit_specification": [],
        "get_password_data": false,
        "hibernation": null,
        "iam_instance_profile": null,
        "instance_type": "t3.medium",
        "key_name": "keypair",
        "launch_template": [],
        "root_block_device": [
         {
          "delete_on_termination": true,
          "tags": null,
          "volume_size": 25
         }
        ],
        "source_dest_check": true,
        "tags": {
         "Name": "ansible1",
         "Role": "ansible1"
        },
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing",
         "Name": "ansible1",
         "Role": "ansible1"
        },
        "timeouts": null,
        "user_data_replace_on_change": false,
        "volume_tags": null
       }
      },
      {
       "address": "module.EC2Ansible.aws_route53_record.ansible_r53_record",
       "mode": "managed",
       "name": "ansible_r53_record",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "alias": [],
        "failover_routing_policy": [],
        "geolocation_routing_policy": [],
        "latency_routing_policy": [],
        "records": [],
        "weighted_routing_policy": []
       },
       "type": "aws_route53_record",
       "values": {
        "alias": [],
        "failover_routing_policy": [],
        "geolocation_routing_policy": [],
        "health_check_id": null,
        "latency_routing_policy": [],
        "multivalue_answer_routing_policy": null,
        "name": "ansible-test",
        "set_identifier": null,
        "ttl": 300,
        "type": "A",
        "weighted_routing_policy": []
       }
      },
      {
       "address": "module.EC2Ansible.aws_volume_attachment.Ansible-Attach",
       "mode": "managed",
       "name": "Ansible-Attach",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_volume_attachment",
       "values": {
        "device_name": "/dev/xvdb",
        "force_detach": true,
        "skip_destroy": null,
        "stop_instance_before_detaching": null
       }
      },
      {
       "address": "module.EC2Ansible.data.template_file.linuxuserdata",
       "mode": "data",
       "name": "linuxuserdata",
       "provider_name": "registry.terraform.io/hashicorp/template",
       "schema_version": 0,
       "sensitive_values": {
        "vars": {}
       },
       "type": "template_file",
       "values": {
        "filename": null,
        "template": "#! /bin/bash\r\n\r\n#change hostname\r\necho \"EC2Ansible.mgmt.test.com\" \u003e /etc/hostname\r\nhostname EC2Ansible.mgmt.test.com\r\n\r\n#Bind Utils for DNS troubleshooting\r\nyum update\r\nyum install -y bind-utils\r\n\r\n#SSM Agent install\r\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\r\nsystemctl enable amazon-ssm-agent\r\n\r\n#Get Role from Tags\r\n#role=$(/root/.local/bin/aws ec2 describe-tags --region us-east-1 --filters --output text \"Name=resource-id,Values=$instance_id\"\r\n#\"Name=key,Values=Role\" --query 'Tags[*].Value')\r\n\r\nsudo useradd ansible-user\r\nsudo passwd Test123!\r\n\r\n# Create ansible data drive\r\nmkdir -p /ansible\r\nmkfs.xfs /dev/nvme1n1\r\necho \"/dev/nvme1n1  /ansible  xfs     defaults  0 0\" \u003e\u003e /etc/fstab\r\nmount /ansible\r\nchown ec2-user:ec2-user /ansible\r\nchmod 755 /ansible\r\n\r\n#Install ansible\r\nyum install -y ansible\r\n\r\n# Install nfs-utils and mount the NFS share\r\nyum install -y nfs-utils\r\nsudo mkdir /var/backups\r\nchown ec2-user:ec2-user /var/backups\r\necho \"${node1_ip}:/shared /var/backups nfs defaults 0 0\"\u003e\u003e /etc/fstab\r\nmount /var/backups\r\n\r\n#Create home directory on login\r\nservice oddjobd start chkconfig oddjobd on\r\nauthconfig ==enablemkhomedir --update\r\n\r\n#Adds NFS node as a host\r\necho \"[nfs]\r\n${node1_ip}\"\u003e\u003e/etc/ansible/hosts\r\n\r\n# Install git and clone the repo to get ansible playbook code\r\nyum install -y git\r\ngit clone https://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@github.com/username/repo.git\r\n\r\nreboot\r\n",
        "vars": {}
       }
      }
     ]
    },
    {
     "address": "module.EC2NFS",
     "resources": [
      {
       "address": "module.EC2NFS.aws_ebs_volume.tools-nfs-volume",
       "mode": "managed",
       "name": "tools-nfs-volume",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_ebs_volume",
       "values": {
        "availability_zone": "us-east-1a",
        "multi_attach_enabled": null,
        "outpost_arn": null,
        "size": 50,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      },
      {
       "address": "module.EC2NFS.aws_instance.rhel_server",
       "mode": "managed",
       "name": "rhel_server",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "capacity_reservation_specification": [],
        "credit_specification": [],
        "ebs_block_device": [],
        "enclave_options": [],
        "ephemeral_block_device": [],
        "ipv6_addresses": [],
        "launch_template": [],
        "metadata_options": [],
        "network_interface": [],
        "root_block_device": [
         {}
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "tags": {},
        "tags_all": {},
        "vpc_security_group_ids": []
       },
       "type": "aws_instance",
       "values": {
        "ami": "ami-0f095f89ae15be883",
        "associate_public_ip_address": true,
        "availability_zone": "us-east-1a",
        "credit_specification": [],
        "get_password_data": false,
        "hibernation": null,
        "iam_instance_profile": null,
        "instance_type": "t3.medium",
        "key_name": "keypair",
        "launch_template": [],
        "root_block_device": [
         {
          "delete_on_termination": true,
          "tags": null,
          "volume_size": 25
         }
        ],
        "source_dest_check": true,
        "tags": {
         "Name": "nfs1",
         "Role": "nfs1"
        },
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing",
         "Name": "nfs1",
         "Role": "nfs1"
        },
        "timeouts": null,
        "user_data": "ae491908a5c832f09cb8aa5102883c5f7f00da55",
        "user_data_replace_on_change": false,
        "volume_tags": null
       }
      },
      {
       "address": "module.EC2NFS.aws_route53_record.nfs_r53_record",
       "mode": "managed",
       "name": "nfs_r53_record",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "alias": [],
        "failover_routing_policy": [],
        "geolocation_routing_policy": [],
        "latency_routing_policy": [],
        "records": [],
        "weighted_routing_policy": []
       },
       "type": "aws_route53_record",
       "values": {
        "alias": [],
        "failover_routing_policy": [],
        "geolocation_routing_policy": [],
        "health_check_id": null,
        "latency_routing_policy": [],
        "multivalue_answer_routing_policy": null,
        "name": "nfs-test",
        "set_identifier": null,
        "ttl": 300,
        "type": "A",
        "weighted_routing_policy": []
       }
      },
      {
       "address": "module.EC2NFS.aws_volume_attachment.NFS-Attach",
       "mode": "managed",
       "name": "NFS-Attach",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_volume_attachment",
       "values": {
        "device_name": "/dev/xvdc",
        "force_detach": true,
        "skip_destroy": null,
        "stop_instance_before_detaching": null
       }
      }
     ]
    },
    {
     "address": "module.Secrets",
     "resources": [
      {
       "address": "module.Secrets.aws_secretsmanager_secret.ansible-user",
       "mode": "managed",
       "name": "ansible-user",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "replica": [],
        "rotation_rules": [],
        "tags_all": {}
       },
       "type": "aws_secretsmanager_secret",
       "values": {
        "description": null,
        "force_overwrite_replica_secret": false,
        "kms_key_id": null,
        "name": "ansible-user",
        "recovery_window_in_days": 30,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      },
      {
       "address": "module.Secrets.aws_secretsmanager_secret_version.ansible-userversion",
       "mode": "managed",
       "name": "ansible-userversion",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "secret_string": true,
        "version_stages": []
       },
       "type": "aws_secretsmanager_secret_version",
       "values": {
        "secret_binary": null
       }
      },
      {
       "address": "module.Secrets.data.aws_secretsmanager_secret.ansible-user-secret",
       "mode": "data",
       "name": "ansible-user-secret",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "rotation_rules": [],
        "tags": {}
       },
       "type": "aws_secretsmanager_secret"
      },
      {
       "address": "module.Secrets.data.aws_secretsmanager_secret_version.ansible-userversion",
       "mode": "data",
       "name": "ansible-userversion",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "version_stages": []
       },
       "type": "aws_secretsmanager_secret_version",
       "values": {
        "version_stage": null
       }
      },
      {
       "address": "module.Secrets.random_password.ansible-user",
       "mode": "managed",
       "name": "ansible-user",
       "provider_name": "registry.terraform.io/hashicorp/random",
       "schema_version": 2,
       "sensitive_values": {},
       "type": "random_password",
       "values": {
        "keepers": null,
        "length": 16,
        "lower": true,
        "min_lower": 0,
        "min_numeric": 0,
        "min_special": 0,
        "min_upper": 0,
        "number": true,
        "numeric": true,
        "override_special": "_%@",
        "special": true,
        "upper": true
       }
      }
     ]
    },
    {
     "address": "module.VPC",
     "resources": [
      {
       "address": "module.VPC.aws_internet_gateway.pub-igw",
       "mode": "managed",
       "name": "pub-igw",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_internet_gateway",
       "values": {
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      },
      {
       "address": "module.VPC.aws_route53_zone.private_mgmt",
       "mode": "managed",
       "name": "private_mgmt",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "name_servers": [],
        "tags_all": {},
        "vpc": [
         {}
        ]
       },
       "type": "aws_route53_zone",
       "values": {
        "comment": "Private DNS Zone for testing",
        "delegation_set_id": null,
        "force_destroy": false,
        "name": "mgmt.test.com",
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        },
        "vpc": [
         {}
        ]
       }
      },
      {
       "address": "module.VPC.aws_route_table.prod-public-crt",
       "mode": "managed",
       "name": "prod-public-crt",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [
         {}
        ],
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "route": [
         {
          "carrier_gateway_id": "",
          "cidr_block": "0.0.0.0/0",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "instance_id": "",
          "ipv6_cidr_block": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
         }
        ],
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        },
        "timeouts": null
       }
      },
      {
       "address": "module.VPC.aws_route_table_association.main-public-subnet-1",
       "mode": "managed",
       "name": "main-public-subnet-1",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": null
       }
      },
      {
       "address": "module.VPC.aws_security_group.nfs-sg",
       "mode": "managed",
       "name": "nfs-sg",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "description": "Security Group for NFS",
        "egress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "All egress",
          "from_port": 0,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_groups": [],
          "self": false,
          "to_port": 0
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "SSH - VPN",
          "from_port": 22,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 22
         },
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "http",
          "from_port": 80,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 80
         },
         {
          "cidr_blocks": [
           "10.0.0.0/16"
          ],
          "description": "NFS",
          "from_port": 2049,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 2049
         },
         {
          "cidr_blocks": [
           "10.0.0.0/16"
          ],
          "description": "Sun Remote Procedure Call (RPC)",
          "from_port": 111,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 111
         }
        ],
        "name": "nfs-sg",
        "revoke_rules_on_delete": false,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        },
        "timeouts": null
       }
      },
      {
       "address": "module.VPC.aws_subnet.public_subnet",
       "mode": "managed",
       "name": "public_subnet",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "us-east-1a",
        "cidr_block": "10.0.1.0/24",
        "customer_owned_ipv4_pool": null,
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "ipv6_cidr_block": null,
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": null,
        "map_public_ip_on_launch": true,
        "outpost_arn": null,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        },
        "timeouts": null
       }
      },
      {
       "address": "module.VPC.aws_vpc.main_vpc",
       "mode": "managed",
       "name": "main_vpc",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_vpc",
       "values": {
        "assign_generated_ipv6_cidr_block": null,
        "cidr_block": "10.0.0.0/16",
        "enable_dns_support": true,
        "instance_tenancy": "default",
        "ipv4_ipam_pool_id": null,
        "ipv4_netmask_length": null,
        "ipv6_ipam_pool_id": null,
        "ipv6_netmask_length": null,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      }
     ]
    },
    {
     "address": "module.cloudwatch",
     "resources": [
      {
       "address": "module.cloudwatch.aws_cloudwatch_dashboard.EC2",
       "mode": "managed",
       "name": "EC2",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_cloudwatch_dashboard",
       "values": {
        "dashboard_body": "{\"widgets\":[{\"height\":6,\"properties\":{\"metrics\":[[\"AWS/EC2\",\"CPUUtilization\",\"InstanceId\",\"i-012345\"]],\"period\":300,\"region\":\"us-east-1\",\"stat\":\"Average\",\"title\":\"EC2 Instance CPU\"},\"type\":\"metric\",\"width\":12,\"x\":0,\"y\":0},{\"height\":3,\"properties\":{\"markdown\":\"Hello world\"},\"type\":\"text\",\"width\":3,\"x\":0,\"y\":7}]}",
        "dashboard_name": "Default-EC2"
       }
      },
      {
       "address": "module.cloudwatch.aws_cloudwatch_log_group.AllEC2",
       "mode": "managed",
       "name": "AllEC2",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_cloudwatch_log_group",
       "values": {
        "kms_key_id": null,
        "name": "allec2",
        "name_prefix": null,
        "retention_in_days": 0,
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        }
       }
      },
      {
       "address": "module.cloudwatch.aws_cloudwatch_metric_alarm.EC2_CPU_Usage_Alarm",
       "mode": "managed",
       "name": "EC2_CPU_Usage_Alarm",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "metric_query": [],
        "tags_all": {}
       },
       "type": "aws_cloudwatch_metric_alarm",
       "values": {
        "actions_enabled": true,
        "alarm_actions": null,
        "alarm_description": "This metric monitors ec2 cpu utilization exceeding 70%",
        "alarm_name": "EC2_CPU_Usage_Alarm",
        "comparison_operator": "GreaterThanOrEqualToThreshold",
        "datapoints_to_alarm": null,
        "dimensions": null,
        "evaluation_periods": 2,
        "extended_statistic": null,
        "insufficient_data_actions": null,
        "metric_name": "CPUUtilization",
        "metric_query": [],
        "namespace": "AWS/EC2",
        "ok_actions": null,
        "period": 60,
        "statistic": "Average",
        "tags": null,
        "tags_all": {
         "Environment": "Lab",
         "Function": "Testing"
        },
        "threshold": 70,
        "threshold_metric_id": null,
        "treat_missing_data": "missing",
        "unit": null
       }
      }
     ]
    }
   ],
   "resources": [
    {
     "address": "aws_iam_instance_profile.nfsinstanceprofile-iamrole",
     "mode": "managed",
     "name": "nfsinstanceprofile-iamrole",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "tags_all": {}
     },
     "type": "aws_iam_instance_profile",
     "values": {
      "name": "nfsinstanceprofile",
      "name_prefix": null,
      "path": "/",
      "role": "nfsinstanceprofile",
      "tags": null,
      "tags_all": {
       "Environment": "Lab",
       "Function": "Testing"
      }
     }
    },
    {
     "address": "aws_iam_role.nfsinstanceprofile",
     "mode": "managed",
     "name": "nfsinstanceprofile",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "inline_policy": [],
      "managed_policy_arns": [],
      "tags_all": {}
     },
     "type": "aws_iam_role",
     "values": {
      "assume_role_policy": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Action\": \"sts:AssumeRole\",\r\n      \"Principal\": {\r\n        \"Service\": \"ec2.amazonaws.com\"\r\n      },\r\n      \"Effect\": \"Allow\",\r\n      \"Sid\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
      "description": null,
      "force_detach_policies": false,
      "max_session_duration": 3600,
      "name": "nfsinstanceprofile",
      "path": "/",
      "permissions_boundary": null,
      "tags": null,
      "tags_all": {
       "Environment": "Lab",
       "Function": "Testing"
      }
     }
    },
    {
     "address": "aws_iam_role_policy.nfs-iam-role-policy",
     "mode": "managed",
     "name": "nfs-iam-role-policy",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {},
     "type": "aws_iam_role_policy",
     "values": {
      "name": "nfs-iam-role-policy",
      "name_prefix": null,
      "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:AttachVolume\",\r\n                \"ec2:DetachVolume\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:volume/*\",\r\n                \"arn:aws:ec2:*:*:instance/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:Describe*\",\r\n            \"Resource\": \"*\"\r\n        }  \r\n    ]\r\n}\r\n"
     }
    },
    {
     "address": "aws_key_pair.keypair",
     "mode": "managed",
     "name": "keypair",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "tags_all": {}
     },
     "type": "aws_key_pair",
     "values": {
      "key_name": "keypair",
      "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDknvglyljz8axr9FqPytFZ8itvP4LDnNQVQd5A3jSy5CT4pQtOoJ/F9TxUrv/qLTYVm6Y5eI8SFKU9GPGXe/gEH48tbPnUMRWwArpLfzu6ji/xESOqtLxmPfD3gVznIvPOXlostU3d8jhr22Q0i2RPPtNU9NXA9fpiM3A0UWeiMkLXwrxRt0Mkxsg7wG2JJB/er/eEBUGx4nQ9gKp6J5nmbui03lzwxKcxUvjckeZR1k4xUIEKdW+T39J1JzxrH/k/tXe7d+tlASsQV5omSIR8PpVf2Yksbp174YizLA/d4iUgBOLvq+v4v1l3gnOaIxD9Bky7sDpAUc+V7NAKMb5lVpweR50RSbI5dUtBfOR8jRfLBGOIvzBlHcxW8nOpG+MTJPUyfr0C2LyfCO+vnAeRuswwX+IsGXHX57tBnl0Mq0QE6dtLwPpTGiZg3ViLXxB7rdC686NVLK+yDNvU2qk7Je+5zQeNRnYazmQgeubE31aC9sVNf7Ra7dTHF7G4A3M= svduser@DESKTOP-3PCHSKI",
      "tags": null,
      "tags_all": {
       "Environment": "Lab",
       "Function": "Testing"
      }
     }
    }
   ]
  }
 },
 "prior_state": {
  "format_version": "1.0",
  "terraform_version": "1.1.7",
  "values": {
   "root_module": {
    "child_modules": [
     {
      "address": "module.EC2NFS",
      "resources": [
       {
        "address": "module.EC2NFS.data.template_file.linuxuserdata",
        "mode": "data",
        "name": "linuxuserdata",
        "provider_name": "registry.terraform.io/hashicorp/template",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "template_file",
        "values": {
         "filename": null,
         "id": "487bf7d84812a8adfcf73f58b55dbcbb0c4a41eb3dc8e12adc163d578769ac90",
         "rendered": "#! /bin/bash\r\n\r\n#change hostname\r\necho \"EC2NFS.mgmt.test.com\" \u003e /etc/hostname\r\nhostname EC2NFS.mgmt.test.com\r\n\r\nyum install -y firewalld\r\nsudo systemctl enable firewalld.service\r\nsudo systemctl start firewalld.service\r\n\r\n#Bind Utils for DNS troubleshooting\r\nyum update\r\nyum install -y bind-utils\r\n\r\n#SSM Agent install\r\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\r\nsudo systemctl enable amazon-ssm-agent\r\nsudo systemctl start amazon-ssm-agent\r\n\r\nsudo useradd ansible-user\r\nsudo passwd Test123!\r\n\r\n#Get Role from Tags\r\n#role=$(/root/.local/bin/aws ec2 describe-tags --region us-east-1 --filters --output text \"Name=resource-id,Values=$instance_id\"\r\n#\"Name=key,Values=Role\" --query 'Tags[*].Value')\r\n\r\nyum install -y nfs-utils \r\nsudo systemctl enable nfs-server.service\r\nsudo systemctl start nfs-server.service\r\n\r\n#Create shared directory, give ec2-user access and share it via /etc/exports\r\nmkdir -p /shared\r\nmkfs.xfs /dev/nvme1n1\r\necho \"/dev/nvme1n1  /shared  xfs     defaults  0 0\" \u003e\u003e /etc/fstab\r\nmount /shared\r\nchown ec2-user:ec2-user /shared\r\nchmod 755 /shared\r\necho '/shared   \"*\"(rw,sync,no_root_squash,no_subtree_check)' \u003e\u003e /etc/exports\r\nexportfs -a\r\n\r\n# Add FW rules for NFS\r\nsystemctl stop firewalld\r\nfirewall-offline-cmd --zone=public --add-port=111/tcp\r\nfirewall-offline-cmd --zone=public --add-port=2049/tcp\r\nfirewall-offline-cmd --list-all --zone=public\r\nsystemctl start firewalld \u0026\u0026 systemctl enable firewalld\r\n\r\n#Create home directory on login\r\nservice oddjobd start chkconfig oddjobd on\r\nauthconfig ==enablemkhomedir --update\r\n\r\nreboot",
         "template": "#! /bin/bash\r\n\r\n#change hostname\r\necho \"EC2NFS.mgmt.test.com\" \u003e /etc/hostname\r\nhostname EC2NFS.mgmt.test.com\r\n\r\nyum install -y firewalld\r\nsudo systemctl enable firewalld.service\r\nsudo systemctl start firewalld.service\r\n\r\n#Bind Utils for DNS troubleshooting\r\nyum update\r\nyum install -y bind-utils\r\n\r\n#SSM Agent install\r\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\r\nsudo systemctl enable amazon-ssm-agent\r\nsudo systemctl start amazon-ssm-agent\r\n\r\nsudo useradd ansible-user\r\nsudo passwd Test123!\r\n\r\n#Get Role from Tags\r\n#role=$(/root/.local/bin/aws ec2 describe-tags --region us-east-1 --filters --output text \"Name=resource-id,Values=$instance_id\"\r\n#\"Name=key,Values=Role\" --query 'Tags[*].Value')\r\n\r\nyum install -y nfs-utils \r\nsudo systemctl enable nfs-server.service\r\nsudo systemctl start nfs-server.service\r\n\r\n#Create shared directory, give ec2-user access and share it via /etc/exports\r\nmkdir -p /shared\r\nmkfs.xfs /dev/nvme1n1\r\necho \"/dev/nvme1n1  /shared  xfs     defaults  0 0\" \u003e\u003e /etc/fstab\r\nmount /shared\r\nchown ec2-user:ec2-user /shared\r\nchmod 755 /shared\r\necho '/shared   \"*\"(rw,sync,no_root_squash,no_subtree_check)' \u003e\u003e /etc/exports\r\nexportfs -a\r\n\r\n# Add FW rules for NFS\r\nsystemctl stop firewalld\r\nfirewall-offline-cmd --zone=public --add-port=111/tcp\r\nfirewall-offline-cmd --zone=public --add-port=2049/tcp\r\nfirewall-offline-cmd --list-all --zone=public\r\nsystemctl start firewalld \u0026\u0026 systemctl enable firewalld\r\n\r\n#Create home directory on login\r\nservice oddjobd start chkconfig oddjobd on\r\nauthconfig ==enablemkhomedir --update\r\n\r\nreboot",
         "vars": null
        }
       }
      ]
     }
    ]
   }
  }
 },
 "resource_changes": [
  {
   "address": "aws_iam_instance_profile.nfsinstanceprofile-iamrole",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "name": "nfsinstanceprofile",
     "name_prefix": null,
     "path": "/",
     "role": "nfsinstanceprofile",
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "create_date": true,
     "id": true,
     "tags_all": {},
     "unique_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "nfsinstanceprofile-iamrole",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_instance_profile"
  },
  {
   "address": "aws_iam_role.nfsinstanceprofile",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "assume_role_policy": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Action\": \"sts:AssumeRole\",\r\n      \"Principal\": {\r\n        \"Service\": \"ec2.amazonaws.com\"\r\n      },\r\n      \"Effect\": \"Allow\",\r\n      \"Sid\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
     "description": null,
     "force_detach_policies": false,
     "max_session_duration": 3600,
     "name": "nfsinstanceprofile",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "create_date": true,
     "id": true,
     "inline_policy": true,
     "managed_policy_arns": true,
     "name_prefix": true,
     "tags_all": {},
     "unique_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "nfsinstanceprofile",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "aws_iam_role_policy.nfs-iam-role-policy",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "name": "nfs-iam-role-policy",
     "name_prefix": null,
     "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:AttachVolume\",\r\n                \"ec2:DetachVolume\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:volume/*\",\r\n                \"arn:aws:ec2:*:*:instance/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:Describe*\",\r\n            \"Resource\": \"*\"\r\n        }  \r\n    ]\r\n}\r\n"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "role": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "nfs-iam-role-policy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy"
  },
  {
   "address": "aws_key_pair.keypair",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "key_name": "keypair",
     "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDknvglyljz8axr9FqPytFZ8itvP4LDnNQVQd5A3jSy5CT4pQtOoJ/F9TxUrv/qLTYVm6Y5eI8SFKU9GPGXe/gEH48tbPnUMRWwArpLfzu6ji/xESOqtLxmPfD3gVznIvPOXlostU3d8jhr22Q0i2RPPtNU9NXA9fpiM3A0UWeiMkLXwrxRt0Mkxsg7wG2JJB/er/eEBUGx4nQ9gKp6J5nmbui03lzwxKcxUvjckeZR1k4xUIEKdW+T39J1JzxrH/k/tXe7d+tlASsQV5omSIR8PpVf2Yksbp174YizLA/d4iUgBOLvq+v4v1l3gnOaIxD9Bky7sDpAUc+V7NAKMb5lVpweR50RSbI5dUtBfOR8jRfLBGOIvzBlHcxW8nOpG+MTJPUyfr0C2LyfCO+vnAeRuswwX+IsGXHX57tBnl0Mq0QE6dtLwPpTGiZg3ViLXxB7rdC686NVLK+yDNvU2qk7Je+5zQeNRnYazmQgeubE31aC9sVNf7Ra7dTHF7G4A3M= svduser@DESKTOP-3PCHSKI",
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "fingerprint": true,
     "id": true,
     "key_name_prefix": true,
     "key_pair_id": true,
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "keypair",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_key_pair"
  },
  {
   "address": "module.EC2Ansible.aws_ebs_volume.tools-ansible-volume",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "availability_zone": "us-east-1a",
     "multi_attach_enabled": null,
     "outpost_arn": null,
     "size": 50,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "encrypted": true,
     "id": true,
     "iops": true,
     "kms_key_id": true,
     "snapshot_id": true,
     "tags_all": {},
     "throughput": true,
     "type": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2Ansible",
   "name": "tools-ansible-volume",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ebs_volume"
  },
  {
   "address": "module.EC2Ansible.aws_instance.rhel_server",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "ami": "ami-0f095f89ae15be883",
     "associate_public_ip_address": true,
     "availability_zone": "us-east-1a",
     "credit_specification": [],
     "get_password_data": false,
     "hibernation": null,
     "iam_instance_profile": null,
     "instance_type": "t3.medium",
     "key_name": "keypair",
     "launch_template": [],
     "root_block_device": [
      {
       "delete_on_termination": true,
       "tags": null,
       "volume_size": 25
      }
     ],
     "source_dest_check": true,
     "tags": {
      "Name": "ansible1",
      "Role": "ansible1"
     },
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing",
      "Name": "ansible1",
      "Role": "ansible1"
     },
     "timeouts": null,
     "user_data_replace_on_change": false,
     "volume_tags": null
    },
    "after_sensitive": {
     "capacity_reservation_specification": [],
     "credit_specification": [],
     "ebs_block_device": [],
     "enclave_options": [],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "metadata_options": [],
     "network_interface": [],
     "root_block_device": [
      {}
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": []
    },
    "after_unknown": {
     "arn": true,
     "capacity_reservation_specification": true,
     "cpu_core_count": true,
     "cpu_threads_per_core": true,
     "credit_specification": [],
     "disable_api_termination": true,
     "ebs_block_device": true,
     "ebs_optimized": true,
     "enclave_options": true,
     "ephemeral_block_device": true,
     "host_id": true,
     "id": true,
     "instance_initiated_shutdown_behavior": true,
     "instance_state": true,
     "ipv6_address_count": true,
     "ipv6_addresses": true,
     "launch_template": [],
     "metadata_options": true,
     "monitoring": true,
     "network_interface": true,
     "outpost_arn": true,
     "password_data": true,
     "placement_group": true,
     "placement_partition_number": true,
     "primary_network_interface_id": true,
     "private_dns": true,
     "private_ip": true,
     "public_dns": true,
     "public_ip": true,
     "root_block_device": [
      {
       "device_name": true,
       "encrypted": true,
       "iops": true,
       "kms_key_id": true,
       "throughput": true,
       "volume_id": true,
       "volume_type": true
      }
     ],
     "secondary_private_ips": true,
     "security_groups": true,
     "subnet_id": true,
     "tags": {},
     "tags_all": {},
     "tenancy": true,
     "user_data": true,
     "user_data_base64": true,
     "vpc_security_group_ids": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2Ansible",
   "name": "rhel_server",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_instance"
  },
  {
   "address": "module.EC2Ansible.aws_route53_record.ansible_r53_record",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "health_check_id": null,
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": null,
     "name": "ansible-test",
     "set_identifier": null,
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": []
    },
    "after_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [],
     "weighted_routing_policy": []
    },
    "after_unknown": {
     "alias": [],
     "allow_overwrite": true,
     "failover_routing_policy": [],
     "fqdn": true,
     "geolocation_routing_policy": [],
     "id": true,
     "latency_routing_policy": [],
     "records": true,
     "weighted_routing_policy": [],
     "zone_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2Ansible",
   "name": "ansible_r53_record",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_record"
  },
  {
   "address": "module.EC2Ansible.aws_volume_attachment.Ansible-Attach",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "device_name": "/dev/xvdb",
     "force_detach": true,
     "skip_destroy": null,
     "stop_instance_before_detaching": null
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "volume_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2Ansible",
   "name": "Ansible-Attach",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_volume_attachment"
  },
  {
   "address": "module.EC2Ansible.data.template_file.linuxuserdata",
   "change": {
    "actions": [
     "read"
    ],
    "after": {
     "filename": null,
     "template": "#! /bin/bash\r\n\r\n#change hostname\r\necho \"EC2Ansible.mgmt.test.com\" \u003e /etc/hostname\r\nhostname EC2Ansible.mgmt.test.com\r\n\r\n#Bind Utils for DNS troubleshooting\r\nyum update\r\nyum install -y bind-utils\r\n\r\n#SSM Agent install\r\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\r\nsystemctl enable amazon-ssm-agent\r\n\r\n#Get Role from Tags\r\n#role=$(/root/.local/bin/aws ec2 describe-tags --region us-east-1 --filters --output text \"Name=resource-id,Values=$instance_id\"\r\n#\"Name=key,Values=Role\" --query 'Tags[*].Value')\r\n\r\nsudo useradd ansible-user\r\nsudo passwd Test123!\r\n\r\n# Create ansible data drive\r\nmkdir -p /ansible\r\nmkfs.xfs /dev/nvme1n1\r\necho \"/dev/nvme1n1  /ansible  xfs     defaults  0 0\" \u003e\u003e /etc/fstab\r\nmount /ansible\r\nchown ec2-user:ec2-user /ansible\r\nchmod 755 /ansible\r\n\r\n#Install ansible\r\nyum install -y ansible\r\n\r\n# Install nfs-utils and mount the NFS share\r\nyum install -y nfs-utils\r\nsudo mkdir /var/backups\r\nchown ec2-user:ec2-user /var/backups\r\necho \"${node1_ip}:/shared /var/backups nfs defaults 0 0\"\u003e\u003e /etc/fstab\r\nmount /var/backups\r\n\r\n#Create home directory on login\r\nservice oddjobd start chkconfig oddjobd on\r\nauthconfig ==enablemkhomedir --update\r\n\r\n#Adds NFS node as a host\r\necho \"[nfs]\r\n${node1_ip}\"\u003e\u003e/etc/ansible/hosts\r\n\r\n# Install git and clone the repo to get ansible playbook code\r\nyum install -y git\r\ngit clone https://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@github.com/username/repo.git\r\n\r\nreboot\r\n",
     "vars": {}
    },
    "after_sensitive": {
     "vars": {}
    },
    "after_unknown": {
     "id": true,
     "rendered": true,
     "vars": {
      "node1_ip": true
     }
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "data",
   "module_address": "module.EC2Ansible",
   "name": "linuxuserdata",
   "provider_name": "registry.terraform.io/hashicorp/template",
   "type": "template_file"
  },
  {
   "address": "module.EC2NFS.aws_ebs_volume.tools-nfs-volume",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "availability_zone": "us-east-1a",
     "multi_attach_enabled": null,
     "outpost_arn": null,
     "size": 50,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "encrypted": true,
     "id": true,
     "iops": true,
     "kms_key_id": true,
     "snapshot_id": true,
     "tags_all": {},
     "throughput": true,
     "type": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2NFS",
   "name": "tools-nfs-volume",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ebs_volume"
  },
  {
   "address": "module.EC2NFS.aws_instance.rhel_server",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "ami": "ami-0f095f89ae15be883",
     "associate_public_ip_address": true,
     "availability_zone": "us-east-1a",
     "credit_specification": [],
     "get_password_data": false,
     "hibernation": null,
     "iam_instance_profile": null,
     "instance_type": "t3.medium",
     "key_name": "keypair",
     "launch_template": [],
     "root_block_device": [
      {
       "delete_on_termination": true,
       "tags": null,
       "volume_size": 25
      }
     ],
     "source_dest_check": true,
     "tags": {
      "Name": "nfs1",
      "Role": "nfs1"
     },
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing",
      "Name": "nfs1",
      "Role": "nfs1"
     },
     "timeouts": null,
     "user_data": "ae491908a5c832f09cb8aa5102883c5f7f00da55",
     "user_data_replace_on_change": false,
     "volume_tags": null
    },
    "after_sensitive": {
     "capacity_reservation_specification": [],
     "credit_specification": [],
     "ebs_block_device": [],
     "enclave_options": [],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "metadata_options": [],
     "network_interface": [],
     "root_block_device": [
      {}
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": []
    },
    "after_unknown": {
     "arn": true,
     "capacity_reservation_specification": true,
     "cpu_core_count": true,
     "cpu_threads_per_core": true,
     "credit_specification": [],
     "disable_api_termination": true,
     "ebs_block_device": true,
     "ebs_optimized": true,
     "enclave_options": true,
     "ephemeral_block_device": true,
     "host_id": true,
     "id": true,
     "instance_initiated_shutdown_behavior": true,
     "instance_state": true,
     "ipv6_address_count": true,
     "ipv6_addresses": true,
     "launch_template": [],
     "metadata_options": true,
     "monitoring": true,
     "network_interface": true,
     "outpost_arn": true,
     "password_data": true,
     "placement_group": true,
     "placement_partition_number": true,
     "primary_network_interface_id": true,
     "private_dns": true,
     "private_ip": true,
     "public_dns": true,
     "public_ip": true,
     "root_block_device": [
      {
       "device_name": true,
       "encrypted": true,
       "iops": true,
       "kms_key_id": true,
       "throughput": true,
       "volume_id": true,
       "volume_type": true
      }
     ],
     "secondary_private_ips": true,
     "security_groups": true,
     "subnet_id": true,
     "tags": {},
     "tags_all": {},
     "tenancy": true,
     "user_data_base64": true,
     "vpc_security_group_ids": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2NFS",
   "name": "rhel_server",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_instance"
  },
  {
   "address": "module.EC2NFS.aws_route53_record.nfs_r53_record",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "health_check_id": null,
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": null,
     "name": "nfs-test",
     "set_identifier": null,
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": []
    },
    "after_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [],
     "weighted_routing_policy": []
    },
    "after_unknown": {
     "alias": [],
     "allow_overwrite": true,
     "failover_routing_policy": [],
     "fqdn": true,
     "geolocation_routing_policy": [],
     "id": true,
     "latency_routing_policy": [],
     "records": true,
     "weighted_routing_policy": [],
     "zone_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2NFS",
   "name": "nfs_r53_record",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_record"
  },
  {
   "address": "module.EC2NFS.aws_volume_attachment.NFS-Attach",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "device_name": "/dev/xvdc",
     "force_detach": true,
     "skip_destroy": null,
     "stop_instance_before_detaching": null
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "volume_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.EC2NFS",
   "name": "NFS-Attach",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_volume_attachment"
  },
  {
   "address": "module.Secrets.aws_secretsmanager_secret.ansible-user",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "description": null,
     "force_overwrite_replica_secret": false,
     "kms_key_id": null,
     "name": "ansible-user",
     "recovery_window_in_days": 30,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "replica": [],
     "rotation_rules": [],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "name_prefix": true,
     "policy": true,
     "replica": true,
     "rotation_enabled": true,
     "rotation_lambda_arn": true,
     "rotation_rules": true,
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.Secrets",
   "name": "ansible-user",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_secretsmanager_secret"
  },
  {
   "address": "module.Secrets.aws_secretsmanager_secret_version.ansible-userversion",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "secret_binary": null
    },
    "after_sensitive": {
     "secret_binary": true,
     "secret_string": true,
     "version_stages": []
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "secret_id": true,
     "secret_string": true,
     "version_id": true,
     "version_stages": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.Secrets",
   "name": "ansible-userversion",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_secretsmanager_secret_version"
  },
  {
   "address": "module.Secrets.data.aws_secretsmanager_secret.ansible-user-secret",
   "change": {
    "actions": [
     "read"
    ],
    "after": {},
    "after_sensitive": {
     "rotation_rules": [],
     "tags": {}
    },
    "after_unknown": {
     "arn": true,
     "description": true,
     "id": true,
     "kms_key_id": true,
     "name": true,
     "policy": true,
     "rotation_enabled": true,
     "rotation_lambda_arn": true,
     "rotation_rules": true,
     "tags": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "data",
   "module_address": "module.Secrets",
   "name": "ansible-user-secret",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_secretsmanager_secret"
  },
  {
   "address": "module.Secrets.data.aws_secretsmanager_secret_version.ansible-userversion",
   "change": {
    "actions": [
     "read"
    ],
    "after": {
     "version_stage": null
    },
    "after_sensitive": {
     "secret_binary": true,
     "secret_string": true,
     "version_stages": []
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "secret_binary": true,
     "secret_id": true,
     "secret_string": true,
     "version_id": true,
     "version_stages": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "data",
   "module_address": "module.Secrets",
   "name": "ansible-userversion",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_secretsmanager_secret_version"
  },
  {
   "address": "module.Secrets.random_password.ansible-user",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "keepers": null,
     "length": 16,
     "lower": true,
     "min_lower": 0,
     "min_numeric": 0,
     "min_special": 0,
     "min_upper": 0,
     "number": true,
     "numeric": true,
     "override_special": "_%@",
     "special": true,
     "upper": true
    },
    "after_sensitive": {
     "bcrypt_hash": true,
     "result": true
    },
    "after_unknown": {
     "bcrypt_hash": true,
     "id": true,
     "result": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.Secrets",
   "name": "ansible-user",
   "provider_name": "registry.terraform.io/hashicorp/random",
   "type": "random_password"
  },
  {
   "address": "module.VPC.aws_internet_gateway.pub-igw",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "tags_all": {},
     "vpc_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "pub-igw",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_internet_gateway"
  },
  {
   "address": "module.VPC.aws_route53_zone.private_mgmt",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "comment": "Private DNS Zone for testing",
     "delegation_set_id": null,
     "force_destroy": false,
     "name": "mgmt.test.com",
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     },
     "vpc": [
      {}
     ]
    },
    "after_sensitive": {
     "name_servers": [],
     "tags_all": {},
     "vpc": [
      {}
     ]
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "name_servers": true,
     "tags_all": {},
     "vpc": [
      {
       "vpc_id": true,
       "vpc_region": true
      }
     ],
     "zone_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "private_mgmt",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_zone"
  },
  {
   "address": "module.VPC.aws_route_table.prod-public-crt",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "propagating_vgws": true,
     "route": [
      {
       "gateway_id": true
      }
     ],
     "tags_all": {},
     "vpc_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "prod-public-crt",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.VPC.aws_route_table_association.main-public-subnet-1",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "gateway_id": null
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "route_table_id": true,
     "subnet_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "main-public-subnet-1",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.VPC.aws_security_group.nfs-sg",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "description": "Security Group for NFS",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "All egress",
       "from_port": 0,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "-1",
       "security_groups": [],
       "self": false,
       "to_port": 0
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "SSH - VPN",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "http",
       "from_port": 80,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 80
      },
      {
       "cidr_blocks": [
        "10.0.0.0/16"
       ],
       "description": "NFS",
       "from_port": 2049,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 2049
      },
      {
       "cidr_blocks": [
        "10.0.0.0/16"
       ],
       "description": "Sun Remote Procedure Call (RPC)",
       "from_port": 111,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 111
      }
     ],
     "name": "nfs-sg",
     "revoke_rules_on_delete": false,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "id": true,
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "name_prefix": true,
     "owner_id": true,
     "tags_all": {},
     "vpc_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "nfs-sg",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.VPC.aws_subnet.public_subnet",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": null,
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "ipv6_cidr_block": null,
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": null,
     "map_public_ip_on_launch": true,
     "outpost_arn": null,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "availability_zone_id": true,
     "id": true,
     "ipv6_cidr_block_association_id": true,
     "owner_id": true,
     "private_dns_hostname_type_on_launch": true,
     "tags_all": {},
     "vpc_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "public_subnet",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.VPC.aws_vpc.main_vpc",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "assign_generated_ipv6_cidr_block": null,
     "cidr_block": "10.0.0.0/16",
     "enable_dns_support": true,
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_ipam_pool_id": null,
     "ipv6_netmask_length": null,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "default_network_acl_id": true,
     "default_route_table_id": true,
     "default_security_group_id": true,
     "dhcp_options_id": true,
     "enable_classiclink": true,
     "enable_classiclink_dns_support": true,
     "enable_dns_hostnames": true,
     "id": true,
     "ipv6_association_id": true,
     "ipv6_cidr_block": true,
     "ipv6_cidr_block_network_border_group": true,
     "main_route_table_id": true,
     "owner_id": true,
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.VPC",
   "name": "main_vpc",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_vpc"
  },
  {
   "address": "module.cloudwatch.aws_cloudwatch_dashboard.EC2",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "dashboard_body": "{\"widgets\":[{\"height\":6,\"properties\":{\"metrics\":[[\"AWS/EC2\",\"CPUUtilization\",\"InstanceId\",\"i-012345\"]],\"period\":300,\"region\":\"us-east-1\",\"stat\":\"Average\",\"title\":\"EC2 Instance CPU\"},\"type\":\"metric\",\"width\":12,\"x\":0,\"y\":0},{\"height\":3,\"properties\":{\"markdown\":\"Hello world\"},\"type\":\"text\",\"width\":3,\"x\":0,\"y\":7}]}",
     "dashboard_name": "Default-EC2"
    },
    "after_sensitive": {},
    "after_unknown": {
     "dashboard_arn": true,
     "id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.cloudwatch",
   "name": "EC2",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_dashboard"
  },
  {
   "address": "module.cloudwatch.aws_cloudwatch_log_group.AllEC2",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "kms_key_id": null,
     "name": "allec2",
     "name_prefix": null,
     "retention_in_days": 0,
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     }
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.cloudwatch",
   "name": "AllEC2",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.cloudwatch.aws_cloudwatch_metric_alarm.EC2_CPU_Usage_Alarm",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "actions_enabled": true,
     "alarm_actions": null,
     "alarm_description": "This metric monitors ec2 cpu utilization exceeding 70%",
     "alarm_name": "EC2_CPU_Usage_Alarm",
     "comparison_operator": "GreaterThanOrEqualToThreshold",
     "datapoints_to_alarm": null,
     "dimensions": null,
     "evaluation_periods": 2,
     "extended_statistic": null,
     "insufficient_data_actions": null,
     "metric_name": "CPUUtilization",
     "metric_query": [],
     "namespace": "AWS/EC2",
     "ok_actions": null,
     "period": 60,
     "statistic": "Average",
     "tags": null,
     "tags_all": {
      "Environment": "Lab",
      "Function": "Testing"
     },
     "threshold": 70,
     "threshold_metric_id": null,
     "treat_missing_data": "missing",
     "unit": null
    },
    "after_sensitive": {
     "metric_query": [],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "evaluate_low_sample_count_percentiles": true,
     "id": true,
     "metric_query": [],
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "module_address": "module.cloudwatch",
   "name": "EC2_CPU_Usage_Alarm",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_metric_alarm"
  }
 ],
 "terraform_version": "1.1.7",
 "variables": {
  "ami-linux": {
   "value": "ami-0f095f89ae15be883"
  },
  "aws_region": {
   "value": "us-east-1a"
  },
  "instance_size": {
   "value": "t3.medium"
  },
  "interface_name": {
   "value": "Ethernet"
  },
  "keypair": {
   "value": "keypair"
  },
  "management_vpc_cidr": {
   "value": "10.0.0.0/16"
  },
  "root_volume_size": {
   "value": "25"
  }
 }
}